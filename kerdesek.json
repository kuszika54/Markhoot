[
  {
    "id": "git-1",
    "text": "Melyik paranccsal lehet új Git repositoryt létrehozni a mappában?",
    "choices": ["git start", "git init", "git new", "git create"],
    "correctIndex": 1,
    "durationSeconds": 30
  },
  {
    "id": "git-2",
    "text": "Melyik fájlban adhatod meg, hogy mely fájlokat ne vegyen figyelembe a Git?",
    "choices": ["ignore.txt", ".gitignore", ".gitconfig", ".config"],
    "correctIndex": 1,
    "durationSeconds": 30
  },
  {
    "id": "git-3",
    "text": "Melyik paranccsal lehet a lokális commitokat feltölteni a távoli repositoryba?",
    "choices": ["git send", "git commit", "git push", "git upload"],
    "correctIndex": 2,
    "durationSeconds": 30
  },
  {
    "id": "git-4",
    "text": "Mit jelent az a kifejezés: HEAD?",
    "choices": ["A staging area", "Az aktuális branch utolsó commitjára mutat", "A commit history", "A repository első commitja"],
    "correctIndex": 1,
    "durationSeconds": 30
  },
  {
    "id": "git-5",
    "text": "Melyik paranccsal lehet egy fájlt a staging area-hoz hozzáadni?",
    "choices": ["git include", "git add", "git commit", "git stage"],
    "correctIndex": 1,
    "durationSeconds": 30
  },
  {
    "id": "git-6",
    "text": "Melyik paranccsal lehet a commit előzményeit megjeleníteni?",
    "choices": ["git show", "git log", "git commits", "git history"],
    "correctIndex": 1,
    "durationSeconds": 30
  },
  {
    "id": "git-7",
    "text": "Melyik parancs hoz létre egy új branch-et?",
    "choices": ["git create branch <név>", "git branch <név>", "git new <név>", "git checkout -n <név>"],
    "correctIndex": 1,
    "durationSeconds": 30
  },
  {
    "id": "git-8",
    "text": "Melyik paranccsal lehet átváltani egy másik branch-re?",
    "choices": ["git switch <branch>", "git checkout <branch>", "git change <branch>", "git move <branch>"],
    "correctIndex": 0,
    "durationSeconds": 30
  },
  {
    "id": "git-9",
    "text": "Mit csinál a git clone?",
    "choices": ["Lemásolja a staging area-t", "Új branch-et hoz létre", "Letölti a távoli repository teljes tartalmát", "Törli a repositoryt"],
    "correctIndex": 2,
    "durationSeconds": 30
  },
  {
    "id": "git-10",
    "text": "Mit csinál a git pull?",
    "choices": ["Reseteli a repositoryt", "Új branch-et hoz létre", "Frissíti a lokális kódot a távoli repository tartalmával", "Feltölti a változtatásokat"],
    "correctIndex": 2,
    "durationSeconds": 30
  },
  {
    "id": "git-11",
    "text": "Melyik parancs törli a staging area-ból a fájlt, de nem törli a fájlrendszerből?",
    "choices": ["git rm <fájl>", "git reset <fájl>", "git delete <fájl>", "git remove <fájl>"],
    "correctIndex": 1,
    "durationSeconds": 30
  },
  {
    "id": "git-12",
    "text": "Melyik paranccsal lehet összeolvasztani két branch-et?",
    "choices": ["git union", "git merge", "git join", "git combine"],
    "correctIndex": 1,
    "durationSeconds": 30
  },
  {
    "id": "git-13",
    "text": "Mi történik, ha git fetch-et futtatsz?",
    "choices": ["Letölti a távoli változtatásokat, de nem mergeli", "Merge-eli a kódot automatikusan", "Feltölti a commitokat", "Törli a branch-eket"],
    "correctIndex": 0,
    "durationSeconds": 30
  },
  {
    "id": "git-14",
    "text": "Melyik parancs készít másolatot egy commit állapotáról?",
    "choices": ["git log -c", "git snapshot", "git checkout <commit>", "git save"],
    "correctIndex": 2,
    "durationSeconds": 30
  },
  {
    "id": "git-15",
    "text": "Mi történik a git stash paranccsal?",
    "choices": ["Feltölti a változtatásokat", "Ideiglenesen elmenti a nem commitolt változtatásokat", "Új branch-et hoz létre", "Törli a változtatásokat"],
    "correctIndex": 1,
    "durationSeconds": 30
  },
  {
    "id": "git-16",
    "text": "Melyik jelzi, hogy konfliktus van merge közben?",
    "choices": ["*** conflict ***", "<<<<<<< HEAD és >>>>>>> branch", "[[[conflict]]]", "merge_error: true"],
    "correctIndex": 1,
    "durationSeconds": 30
  },
  {
    "id": "git-17",
    "text": "Melyik Git parancs mutatja meg, hogy mely fájlok változtak a legutóbbi commit óta?",
    "choices": ["git diff", "git list", "git status", "git log"],
    "correctIndex": 2,
    "durationSeconds": 30
  },
  {
    "id": "git-18",
    "text": "Mit csinál a git revert <commit>?",
    "choices": ["Reseteli a branch-et", "Törli a repositoryt", "Új commitot hoz létre, ami visszavonja a megadott commit változtatásait", "Kitörli a commitot a history-ból"],
    "correctIndex": 2,
    "durationSeconds": 30
  },
  {
    "id": "git-19",
    "text": "Mit csinál a git rebase?",
    "choices": ["Merge-eli automatikusan a branch-et", "Új branch-et hoz létre", "Áthelyezi a commitokat egy másik branch tetejére", "Törli a commitokat"],
    "correctIndex": 2,
    "durationSeconds": 30
  },
  {
    "id": "git-20",
    "text": "Melyik parancs állítja vissza a repositoryt egy adott commit állapotára (history-t átírva)?",
    "choices": ["git checkout <commit>", "git restore <commit>", "git revert <commit>", "git reset --hard <commit>"],
    "correctIndex": 3,
    "durationSeconds": 30
  }
]